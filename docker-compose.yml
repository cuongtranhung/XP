version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: fullstack_auth_db
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: @abcd1234
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/migrations:/docker-entrypoint-initdb.d
    networks:
      - auth_network

  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    container_name: fullstack_auth_backend
    ports:
      - "5000:5000"
    depends_on:
      - postgres
    environment:
      NODE_ENV: development
      DATABASE_URL: postgresql://postgres:@abcd1234@postgres:5432/postgres
      JWT_SECRET: your-super-secure-jwt-secret-key-change-in-production
      FRONTEND_URL: http://localhost:3000
      SMTP_HOST: smtp.gmail.com
      SMTP_PORT: 587
      SMTP_SECURE: false
      SMTP_USER: your-email@gmail.com
      SMTP_PASS: your-app-password
      FROM_EMAIL: noreply@yourapp.com
      FROM_NAME: Your App Name
    volumes:
      - ./backend:/app
      - /app/node_modules
    networks:
      - auth_network
    command: npm run dev

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: fullstack_auth_frontend
    ports:
      - "3000:3000"
    depends_on:
      - backend
    environment:
      REACT_APP_API_URL: http://localhost:5000
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - auth_network
    command: npm start

volumes:
  postgres_data:

networks:
  auth_network:
    driver: bridge