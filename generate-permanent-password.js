#!/usr/bin/env node

const bcrypt = require('bcryptjs');

async function generatePermanentPasswordHash() {
  console.log('üîê Generating Permanent Password Hash');
  console.log('=====================================');
  
  const email = 'cuongtranhung@gmail.com';
  const permanentPassword = '@Abcd6789';  // PERMANENT PASSWORD - DO NOT CHANGE
  
  console.log(`Email: ${email}`);
  console.log(`Permanent Password: ${permanentPassword}`);
  console.log('\n‚ö†Ô∏è  WARNING: This is the PERMANENT TEST PASSWORD. DO NOT CHANGE IT!');
  
  try {
    // Generate hash with 12 rounds (secure)
    console.log('\nüîß Generating bcrypt hash...');
    const hash = await bcrypt.hash(permanentPassword, 12);
    
    console.log(`Generated Hash: ${hash}`);
    
    // Verify the hash works
    console.log('\nüß™ Verifying hash...');
    const isValid = await bcrypt.compare(permanentPassword, hash);
    
    if (isValid) {
      console.log('‚úÖ Hash verification successful!');
      
      console.log('\nüìù SQL Command to Update Password:');
      console.log('===================================');
      console.log(`UPDATE users SET password_hash = '${hash}' WHERE email = '${email}';`);
      
      console.log('\nüîë Test Credentials:');
      console.log('====================');
      console.log(`Email: ${email}`);
      console.log(`Password: ${permanentPassword}`);
      
      console.log('\n‚ö†Ô∏è  IMPORTANT NOTES:');
      console.log('‚Ä¢ This password is PERMANENT for testing');
      console.log('‚Ä¢ DO NOT change this password');
      console.log('‚Ä¢ Use for all future tests');
      console.log('‚Ä¢ Password: @Abcd6789');
      
      return hash;
    } else {
      console.log('‚ùå Hash verification failed!');
    }
  } catch (error) {
    console.log(`‚ùå Error: ${error.message}`);
  }
}

generatePermanentPasswordHash().catch(console.error);